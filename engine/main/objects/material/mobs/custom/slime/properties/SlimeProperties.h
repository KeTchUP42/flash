//
// Created by roman on 22.11.2020.
//

#ifndef FLASH_SLIMEPROPERTIES_H
#define FLASH_SLIMEPROPERTIES_H

namespace Mobs {

    /**
     * @brief Struct contains slime numeric properties.
     */
    struct SlimeProperties {
        SlimeProperties(
                float moveSpeed,
                float jumpSpeed,
                unsigned int jumpRateCoefficient,
                float punchPower,
                float punchDamage,
                float elasticCoefficient,
                float frictionCoefficient,
                unsigned int minSplitSize,
                float splittingCoefficient,
                unsigned int splitSlimesNumber,
                const std::pair<float, float> &splitPower
        ) : moveSpeed(moveSpeed),
            jumpSpeed(jumpSpeed),
            jumpRateCoefficient(jumpRateCoefficient),
            punchPower(punchPower),
            punchDamage(punchDamage),
            elasticCoefficient(elasticCoefficient),
            frictionCoefficient(frictionCoefficient),
            minSplitSize(minSplitSize),
            splitCoefficient(splittingCoefficient),
            splitSlimesNumber(splitSlimesNumber),
            splitPower(splitPower) {}

        /**
        * @brief The parameter of speed obtained when moving horizontally by jump.
        */
        float moveSpeed;

        /**
         * @brief The parameter of speed obtained horizontally at each jump.
         */
        float jumpSpeed;

        /**
         * @brief The value determines the frequency of slime's jumps. The higher the value is, the jumps are less frequent.
         */
        unsigned int jumpRateCoefficient;

        /**
         * @brief Parameter sets slime's punch power.
         */
        float punchPower;

        /**
         * @brief Parameter sets slime's punch damage.
         */
        float punchDamage;

        /**
         * @brief This coefficient uses in calculations after players jump on slime.
         */
        float elasticCoefficient;

        /**
         * @brief This coefficient uses in calculations during players moving on slime.
         */
        float frictionCoefficient;

        /**
         * @brief The minimum size to which the slime can be divided. Slime could not have any side less than 10 px.
         */
        unsigned int minSplitSize;

        /**
         * @brief The parameter shows how many times the split slimes will be smaller than the original one.
         */
        float splitCoefficient;

        /**
         * @brief The parameter indicates the number of slimes which can be generated by a slime.
         */
        unsigned int splitSlimesNumber;

        /**
         * @brief The parameter sets the value which uses in calculating initial acceleration of split slimes.
         */
        std::pair<float, float> splitPower;
    };
}

#endif //FLASH_SLIMEPROPERTIES_H
